{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onAdd","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","className","s","form","onSubmit","preventDefault","label","type","input","onChange","button","ContactList","contacts","onDeleteContact","console","log","formContact","map","id","formContactItem","formContactButton","onClick","propType","PropTypes","arrayOf","shape","string","func","Filter","contactsDefault","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contactsFromLocalStorage","parsedContactsFromLocalStorage","contact","shortid","generate","find","toLowerCase","alert","prevState","normalizedFilter","includes","visibleContacts","idForDelete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76172c2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2G4yp\",\"label\":\"ContactForm_label__P9lsJ\",\"input\":\"ContactForm_input__3WGRX\",\"button\":\"ContactForm_button__10IF-\"};","import { useState } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm({ onAdd }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    switch (event.currentTarget.name) {\r\n      case \"name\":\r\n        setName(event.currentTarget.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(event.currentTarget.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    onAdd(name, number);\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          value={number}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// class OldContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   handleChange = (event) => {\r\n//     this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n//   };\r\n\r\n//   handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     this.setState({ name: \"\", number: \"\" });\r\n//     this.props.onAdd(this.state.name, this.state.number);\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <form className={s.form} onSubmit={this.handleSubmit}>\r\n//         <label className={s.label}>\r\n//           Name\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             className={s.input}\r\n//             value={this.state.name}\r\n//             onChange={this.handleChange}\r\n//           ></input>\r\n//         </label>\r\n\r\n//         <label className={s.label}>\r\n//           Number\r\n//           <input\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             className={s.input}\r\n//             value={this.state.number}\r\n//             onChange={this.handleChange}\r\n//           ></input>\r\n//         </label>\r\n\r\n//         <button type=\"submit\" className={s.button}>\r\n//           Add contact\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onAdd: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  console.log(\"!!!contacts\", contacts);\r\n  return (\r\n    <ul className={s.formContact}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.formContactItem}>\r\n          {name}: {number}\r\n          <button\r\n            className={s.formContactButton}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propType = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <input type=\"text\" value={value} onChange={onChange}></input>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nimport shortid from \"shortid\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst contactsDefault = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return (\r\n      JSON.parse(window.localStorage.getItem(\"savedContacts\")) ??\r\n      contactsDefault\r\n    );\r\n  });\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    contacts.find(\r\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\r\n    )\r\n      ? alert(`${name} is already in contacts.`)\r\n      : setContacts((prevState) => [contact, ...prevState]);\r\n  };\r\n\r\n  const deleteContact = (idForDelete) => {\r\n    setContacts((prevState) =>\r\n      prevState.filter((contact) => contact.id !== idForDelete)\r\n    );\r\n  };\r\n\r\n  const changeFilter = (event) => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n\r\n  const visibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"savedContacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  console.log(\"!!!APP\", contacts);\r\n  const contactsFromLocalStorage = localStorage.getItem(\"savedContacts\");\r\n  const parsedContactsFromLocalStorage = JSON.parse(contactsFromLocalStorage);\r\n\r\n  console.log(\r\n    \"!!!parsedContactsFromLocalStorage\",\r\n    parsedContactsFromLocalStorage\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const contactsFromLocalStorage = localStorage.getItem(\"savedContacts\");\r\n  //   const parsedContactsFromLocalStorage = JSON.parse(contactsFromLocalStorage);\r\n\r\n  //   parsedContactsFromLocalStorage\r\n  //     ? setContacts(parsedContactsFromLocalStorage)\r\n  //     : setContacts(contacts);\r\n  // }, [contacts]);\r\n\r\n  //   componentDidMount() {\r\n  //     const contactsFromLocalStorage = localStorage.getItem(\"savedContacts\");\r\n  //     const parsedContactsFromLocalStorage = JSON.parse(contactsFromLocalStorage);\r\n\r\n  //     parsedContactsFromLocalStorage\r\n  //       ? this.setState({ contacts: parsedContactsFromLocalStorage })\r\n  //       : this.setState({ contacts: this.state.contacts });\r\n  //     // this.setState({ contacts: parsedContactsFromLocalStorage });\r\n  //   }\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onAdd={addContact} />\r\n      <h3>Find contacts by name</h3>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <h2>Contacts</h2>\r\n      <ContactList\r\n        contacts={visibleContacts()}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// class OldApp extends Component {\r\n// +   state = {\r\n// +     contacts: [\r\n// +       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n// +       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n// +       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n// +       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// +     ],\r\n//     filter: \"\",\r\n//   };\r\n\r\n// +   addContact = (name, number) => {\r\n// +     const contact = {\r\n// +       id: shortid.generate(),\r\n// +       name: name,\r\n// +       number: number,\r\n// +     };\r\n\r\n//     this.state.contacts.find(\r\n//       ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\r\n//     )\r\n//       ? alert(`${name} is already in contacts.`)\r\n//       : this.setState((prevState) => ({\r\n//           contacts: [contact, ...prevState.contacts],\r\n//         }));\r\n//   };\r\n\r\n//   deleteContact = (idForDelete) => {\r\n//     this.setState((prevState) => ({\r\n//       contacts: prevState.contacts.filter(\r\n//         (contact) => contact.id !== idForDelete\r\n//       ),\r\n//     }));\r\n//   };\r\n\r\n//   changeFilter = (event) => {\r\n//     this.setState({ filter: event.currentTarget.value });\r\n//   };\r\n\r\n//   visibleContacts = () => {\r\n//     const normalizedFilter = this.state.filter.toLowerCase();\r\n//     return this.state.contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       localStorage.setItem(\r\n//         \"savedContacts\",\r\n//         JSON.stringify(this.state.contacts)\r\n//       );\r\n//     }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const contactsFromLocalStorage = localStorage.getItem(\"savedContacts\");\r\n//     const parsedContactsFromLocalStorage = JSON.parse(contactsFromLocalStorage);\r\n\r\n//     parsedContactsFromLocalStorage\r\n//       ? this.setState({ contacts: parsedContactsFromLocalStorage })\r\n//       : this.setState({ contacts: this.state.contacts });\r\n//     // this.setState({ contacts: parsedContactsFromLocalStorage });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h1>Phonebook</h1>\r\n//         <ContactForm onAdd={this.addContact} />\r\n\r\n//         <h3>Find contacts by name</h3>\r\n//         <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n\r\n//         <h2>Contacts</h2>\r\n//         <ContactList\r\n//           contacts={this.visibleContacts()}\r\n//           onDeleteContact={this.deleteContact}\r\n//         />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactList_formContact__2gY3E\",\"formContactItem\":\"ContactList_formContactItem__2l5ar\",\"formContactButton\":\"ContactList_formContactButton__kTtaS\"};"],"sourceRoot":""}